
attribute vec4 vPosition; 
varying vec3 vTexCoord;

uniform vec3 translate;
uniform vec3 scale;
uniform vec4 rotation;



void main()
{
    vec3 pos = vec3(gl_Vertex);

	float angle = radians(rotation[0]);
	vec3 axis = normalize(rotation.yzw);
	
	mat3 I = mat3(1.0);
	mat3 S = mat3(      0, -axis.z,  axis.y,
	               axis.z,       0, -axis.x,
                  -axis.y,  axis.x,       0);
	mat3 uuT = outerProduct(axis, axis);
	mat3 rot = uuT + cos(angle)*(I - uuT) + sin(angle)*S;	

	pos *= scale;	
	pos *= rot;
    pos += translate;
	
	//vTexCoord   = vec2(gl_MultiTexCoord0);
	vTexCoord   = pos.xyz * scale.xyz;
	
	gl_Position =  gl_ModelViewProjectionMatrix * vec4(pos, 1);
}
